<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
                xmlns:s="library://ns.adobe.com/flex/spark"
                xmlns:mx="library://ns.adobe.com/flex/mx"
                contentBackgroundColor="0xABB3C6" 
                dataChange="itemrenderer1_dataChangeHandler(event)"
                width="609" height="87" autoDrawBackground="true">
    <fx:Script>
        <![CDATA[
            import Classes.Stock;
            
            import config.Constants;
            
            import mx.binding.utils.BindingUtils;
            import mx.binding.utils.ChangeWatcher;
            import mx.events.FlexEvent;
            
            [Bindable]
            public var stockName:String = new String();
            
            [Bindable]
            public var stockValue:String=new String();
            
            [Bindable]
            public var stockChange:String = new String();
            
            public var cv1:ChangeWatcher;
            public var cv2:ChangeWatcher;
            
            private static var RED_GRADIENT_1:uint = 0xA63F3F;
            private static var RED_GRADIENT_2:uint = 0x8C2A26;
            private static var RED_GRADIENT_3:uint = 0x862D28;
            private static var RED_EDGE:uint = 0x691e1c;
            private static var GREEN_GRADIENT_1:uint = 0x8CB15B;
            private static var GREEN_GRADIENT_2:uint = 0x709635;
            private static var GREEN_GRADIENT_3:uint = 0x6B9135;
            private static var GREEN_EDGE:uint = 0x3E6310;
            
            
                        
            public function setChangeDirection(o:*=null):void {
                var difference:Number = (data as Stock).yesterday / ( (data as Stock).value - (data as Stock).yesterday) ;
                var absDifference:Number;
                               
                if(difference < 0) {
                    absDifference = -difference;
                    gradient1.color = RED_GRADIENT_1;
                    gradient2.color = RED_GRADIENT_2;
                    gradient3.color = RED_GRADIENT_3;
                    edgeRectFillColor.color = RED_EDGE;
                    changeDirectionTetxt.text = "-"
                } else {
                    absDifference = difference;
                    gradient1.color = GREEN_GRADIENT_1;
                    gradient2.color = GREEN_GRADIENT_2;
                    gradient3.color = GREEN_GRADIENT_3;
                    edgeRectFillColor.color = GREEN_EDGE;
                    changeDirectionTetxt.text = "+"
                } 
                if(absDifference > 10) {
                    dailyChange.setStyle("fontSize", 30);
                    changeDirectionShadow.setStyle("fontSize", 30);
                } else {
                    dailyChange.setStyle("fontSize", 40);
                    changeDirectionShadow.setStyle("fontSize", 40);
                }
                stockChange = absDifference.toFixed(Constants.decimals) + "%";
            }
            
            public function setValue(o:*=null):void{
                stockValue = (data as Stock).value.toFixed(Constants.decimals)
            }
            
            protected function itemrenderer1_dataChangeHandler(event:FlexEvent = null):void
            {   
                if(cv1){
                    cv1.unwatch();
                    cv2.unwatch();
                }
                
                cv1 = BindingUtils.bindSetter(setValue, data, "value");
                cv2 = BindingUtils.bindSetter(setChangeDirection, data, "value");
               
                stockName = (data as Stock).name;
                
            }
            
        ]]>
    </fx:Script>
    <s:states>
        <s:State name="State1"/>
        <s:State name="aa"/>
    </s:states>
    <s:Rect x="429" y="10" width="170" height="68" radiusX="15" radiusY="15">
        <s:fill>
            <s:SolidColor id="edgeRectFillColor" />
        </s:fill>
    </s:Rect>
    <s:Rect x="433" y="14" width="162" height="60" radiusX="10" radiusY="10" >
        <s:fill>
            <s:LinearGradient rotation="90" >
                <s:GradientEntry id="gradient1" />
                <s:GradientEntry id="gradient2" />
                <s:GradientEntry id="gradient3" />
            </s:LinearGradient>
        </s:fill>
    </s:Rect>
    
   <s:Label x="11" y="25" width="222"  height="45" 
             color="#000000" 
             fontSize="45" fontWeight="bold" 
             text="{stockName}"/>
    <s:Label x="11" y="27" width="222"  height="45"
             id="nameLabel"
             color="#FFFFFF" 
             fontSize="45" fontWeight="bold" 
             text="{stockName}"/>
    <s:Label x="206" y="25" width="211"  height="45"
             color="#000000" fontSize="45" 
             fontWeight="bold" 
             text="{stockValue}"
             textAlign="right" />
    <s:Label x="206" y="27" width="211"  height="45" 
             color="#FFFFFF" fontSize="45" 
             fontWeight="bold" 
             id="value"
             text="{stockValue}"
             textAlign="right"/>
    <s:Label id="dailyChange" x="425" y="25" width="164" height="45" color="#000000" fontSize="40"
             fontWeight="bold" text="{stockChange}" textAlign="right" verticalAlign="middle"/>
    <s:Label id="changeDirectionShadow" x="425" y="27" width="164" height="45" color="#FFFFFF"
             fontSize="40" fontWeight="bold" text="{stockChange}" textAlign="right"
             verticalAlign="middle"/>
    <s:Label id="changeDirectionTetxt" 
             x="441" y="27" width="33" height="45" 
             color="#FFFFFF" fontSize="45" 
             fontWeight="bold" text="+"
             textAlign="left"/>
</s:ItemRenderer>
